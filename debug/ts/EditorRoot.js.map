{"version":3,"file":"EditorRoot.js","sourceRoot":"","sources":["EditorRoot.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,+CAAiD;AACjD,0EAAuD;AACvD,yCAA2C;AAO3C,2CAAwC;AACxC,qDAAkD;AAElD;IASC,yBAAY,MAAc,EACvB,QAAgB;QANnB,iBAAY,GAAW,CAAC,CAAC,CAAC;QAC1B,eAAU,GAAW,CAAC,CAAC;QACvB,oBAAe,GAAY,IAAI,CAAC;QAK/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACjB,kBAAkB;QAClB,yCAAyC;QACzC,6CAA6C;QAC7C,6CAA6C;QAC7C,6CAA6C;QAC7C,KAAK;QACL,qBAAqB;QACrB,6CAA6C;QAC7C,8CAA8C;QAC9C,8CAA8C;QAC9C,2CAA2C;QAC3C,6CAA6C;QAC7C,2CAA2C;QAC3C,2CAA2C;QAC3C,8CAA8C;QAC9C,8CAA8C;QAC9C,KAAK;IACN,CAAC;IACF,sBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,0CAAe;AAyC5B;IAAgC,8BAAiD;IAEhF,oBAAY,KAAsB;QAAlC,YACC,kBAAM,KAAK,CAAC,SAaZ;QAZA,IAAM,QAAQ,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,GAAG,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;QAEpF,IAAM,QAAQ,GAAqB,gCAAQ,CAAC,iBAAiB,CAC5D,QAAQ,EACR,KAAK,CAAC,WAAW,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EACnD,KAAK,CAAC,YAAY,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,YAAY,CACjC,CAAC;QAEtB,KAAI,CAAC,KAAK,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,cAAc,CACtD,KAAK,CAAC,OAAO,EACb,QAAQ,CACR,EAAE,QAAQ,CAAC,CAAC;;IACd,CAAC;IAED;;;OAGG;IACW,oCAAe,GAA7B;;gBACK,MAAM,kBAKJ,MAAM;;;;iCALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;wBAEvB,qBAAM,MAAM,CAAC,UAAU,EAAE,EAAA;;gCAAzB,SAAyB;wBACvB,qBAAM,MAAM,CAAC,UAAU,EAAE,EAAA;;kCAAzB,SAAyB;iCAET,IAAI,CAAC,KAAK;wBAC1C,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;wBAC1B,MAAM,CAAC,YAAY,GAAG,OAAO,CAAC;6BAE1B,CAAA,KAAK,KAAK,CAAC,CAAA,EAAX,wBAAW;wBACd,qBAAM,MAAM,CAAC,QAAQ,EAAE,EAAA;;wBAAvB,SAAuB,CAAC;wBACxB,IAAI,CAAC,OAAO,EAAE,CAAC;wBACf,sBAAO,IAAI,EAAC;;wBAGb,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;4BACnD,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;4BACxB,MAAM,gBAAC,IAAI,CAAC,cAAc,EAAE,EAAC;wBAC9B,CAAC;6BAEG,CAAA,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA,EAA3C,wBAA2C;wBAC9C,qBAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAA;;wBAAtC,SAAsC,CAAC;wBACvC,IAAI,CAAC,OAAO,EAAE,CAAC;wBACf,sBAAO,IAAI,EAAC;;wBAEb,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;wBAE1B,qBAAM,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,EAAA;;wBAAlC,SAAkC,CAAC;wBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;wBACf,sBAAO,IAAI,EAAC;;;;KACZ;IAEO,mCAAc,GAAtB;QAAA,iBAkBC;QAhBA,IAAM,MAAM,GAAoB,IAAI,CAAC,KAAK,CAAC;QAC3C,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACxC,EAAE,CAAC,CACF,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;eAChD,CAAC,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,eAAe,CACpE,CAAC,CAAC,CAAC;YACF,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACnC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;YACvC,KAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED;;OAEG;IACH,4BAAO,GAAP;QAAA,iBAMC;QALA,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;YACjC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sCAAiB,GAAjB;QACC,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,oCAAoC;IACpC,EAAE;IACF,+CAA+C;IAC/C,0DAA0D;IAC1D,iEAAiE;IACjE,OAAO;IACP,2CAA2C;IAC3C,6DAA6D;IAC7D,6DAA6D;IAC7D,oBAAoB;IACpB,OAAO;IACP,IAAI;IAEJ,2BAAM,GAAN;QAEC,IAAM,MAAM,GAAoB,IAAI,CAAC,KAAK,CAAC;QAC3C,MAAM,CAAC,CACN,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS;YAC/B,6BAAK,SAAS,EAAE,MAAM,CAAC,eAAe;gBACrC,oBAAC,iCAAe,IAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,CACzD;YACN,6BAAK,SAAS,EAAE,MAAM,CAAC,eAAe;gBACrC,oBAAC,uBAAU,IAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,GAAG,aAAa,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,CACpE,CACD,CACN,CAAC;IACH,CAAC;IACF,iBAAC;AAAD,CAAC,AA1HD,CAAgC,KAAK,CAAC,SAAS,GA0H9C;AA1HY,gCAAU","sourcesContent":["import * as React from \"react\";\nimport * as styles from \"./EditorRootStyle.scss\";\nimport Renderer from \"@s2study/draw-canvas2d-renderer\";\nimport * as editors from \"../../src/index\";\nimport {history, renderer} from \"@s2study/draw-api\";\nimport DrawHistory = history.DrawHistory;\nimport DrawchatRenderer = renderer.DrawchatRenderer;\nimport {Editor} from \"../../src/Editor\";\nimport {Color} from \"../../src/index\";\nimport {ColorFactory} from \"../../src/Color\";\nimport {EditorMain} from \"./EditorMain\";\nimport {CanvasContainer} from \"./CanvasContainer\";\n\nexport class EditorRootState {\n\teditor: Editor;\n\t// colors: Color[];\n\tlatest: number;\n\tcurrentLayer: number = -1;\n\tlayerCount: number = 0;\n\tmodeChangeFirst: boolean = true;\n\tcanvasId: string;\n\n\tconstructor(editor: Editor,\n\t\t\t\tcanvasId: string) {\n\t\tthis.editor = editor;\n\t\tthis.canvasId = canvasId;\n\t\tthis.latest = -1;\n\t\t// this.colors = [\n\t\t// \tColorFactory.createInstance(0, 0, 0),\n\t\t// \tColorFactory.createInstance(255, 255, 0),\n\t\t// \tColorFactory.createInstance(255, 0, 255),\n\t\t// \tColorFactory.createInstance(0, 255, 255),\n\t\t// ];\n\t\t// this.modeItems = [\n\t\t// \tnew ModeItem(editor.mode.STROKE_MODE, 1),\n\t\t// \tnew ModeItem(editor.mode.STROKE_MODE, 12),\n\t\t// \tnew ModeItem(editor.mode.STROKE_MODE, 24),\n\t\t// \t// new ModeItem(editor.mode.FILL_MODE),\n\t\t// \tnew ModeItem(editor.mode.HAND_TOOL_MODE),\n\t\t// \t// new ModeItem(editor.mode.TEXT_MODE),\n\t\t// \t// new ModeItem(editor.mode.CLIP_MODE),\n\t\t// \tnew ModeItem(editor.mode.EYEDROPPER_MODE),\n\t\t// \tnew ModeItem(editor.mode.ERASER_MODE, 24),\n\t\t// ];\n\t}\n}\n\nexport interface EditorRootProps {\n\thistory: DrawHistory;\n\tcanvasElement?: string;\n\tcanvasWidth?: number;\n\tcanvasHeight?: number;\n}\n\nexport class EditorRoot extends React.Component<EditorRootProps, EditorRootState> {\n\n\tconstructor(props: EditorRootProps) {\n\t\tsuper(props);\n\t\tconst canvasId = props.canvasElement == null ? \"editorCanvas\" : props.canvasElement;\n\n\t\tconst renderer: DrawchatRenderer = Renderer.createDOMRenderer(\n\t\t\tcanvasId,\n\t\t\tprops.canvasWidth == null ? 600 : props.canvasWidth,\n\t\t\tprops.canvasHeight == null ? 400 : props.canvasHeight\n\t\t) as DrawchatRenderer;\n\n\t\tthis.state = new EditorRootState(editors.createInstance(\n\t\t\tprops.history,\n\t\t\trenderer\n\t\t), canvasId);\n\t}\n\n\t/**\n\t * プロパティの補完\n\t * @returns {boolean}\n\t */\n\tprivate async complementProps(): Promise<boolean> {\n\t\tlet layers = this.state.editor.layers;\n\n\t\tconst count = await layers.layerCount();\n\t\tconst current = await layers.getCurrent();\n\n\t\tconst _state: EditorRootState = this.state;\n\t\t_state.layerCount = count;\n\t\t_state.currentLayer = current;\n\n\t\tif (count === 0) {\n\t\t\tawait layers.addLayer();\n\t\t\tthis.refresh();\n\t\t\treturn true;\n\t\t}\n\n\t\tif (count >= 0 && current >= 0 && current < count) {\n\t\t\t_state.latest = current;\n\t\t\treturn this.complementMode();\n\t\t}\n\n\t\tif (_state.latest >= 0 && _state.latest < count) {\n\t\t\tawait layers.setCurrent(_state.latest);\n\t\t\tthis.refresh();\n\t\t\treturn true;\n\t\t}\n\t\t_state.latest = count - 1;\n\n\t\tawait layers.setCurrent(count - 1);\n\t\tthis.refresh();\n\t\treturn true;\n\t}\n\n\tprivate complementMode(): boolean {\n\n\t\tconst _state: EditorRootState = this.state;\n\t\tlet mode = _state.editor.mode.getMode();\n\t\tif (\n\t\t\t(mode >= 0 && mode !== _state.editor.mode.CHANGING)\n\t\t\t|| (mode === _state.editor.mode.CHANGING && !_state.modeChangeFirst)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_state.modeChangeFirst = false;\n\t\tconst changer = _state.editor.mode;\n\t\tchanger.changeMode(changer.BRUSH_MODE).then(() => {\n\t\t\t_state.editor.properties.thickness = 3;\n\t\t\tthis.refresh();\n\t\t});\n\t\treturn true;\n\t}\n\n\t/**\n\t * 画面リフレッシュ\n\t */\n\trefresh(): void {\n\t\tthis.complementProps().then((doing) => {\n\t\t\tif (!doing) {\n\t\t\t\tthis.setState(this.state);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * コンポーネントマウント時の処理\n\t */\n\tcomponentDidMount(): void {\n\t\tthis.complementProps().then(() => {\n\t\t\treturn null;\n\t\t});\n\t}\n\n\t// modeSelect(index: number): void {\n\t//\n\t// \tconst _state: EditorRootState = this.state;\n\t// \t_state.modeItems = _state.modeItems.map((item, i) => {\n\t// \t\treturn new ModeItem(item.mode, item.thickness, i === index);\n\t// \t});\n\t// \tlet selected = _state.modeItems[index];\n\t// \t_state.editor.mode.changeMode(selected.mode).then(() => {\n\t// \t\t_state.editor.properties.thickness = selected.thickness;\n\t// \t\tthis.refresh();\n\t// \t});\n\t// }\n\n\trender() {\n\n\t\tconst _state: EditorRootState = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<div className={styles.canvasContainer}>\n\t\t\t\t\t<CanvasContainer id={_state.canvasId} editor={_state.editor}/>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.canvasContainer}>\n\t\t\t\t\t<EditorMain id={_state.canvasId + \"_eventLayer\"} editor={_state.editor}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}